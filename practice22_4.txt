/*22.4 Практическая работа
Что входит в работу:
1. Посчитать числа в неупорядоченном массиве после заданного числа.
2. Найти первое вхождение числа в упорядоченном массиве (числа могут повторяться).*/

package main

import (
	"fmt"
	"math/rand"
	"time"
)

const n = 20

func main() {

	// Программа подсчитывает количество чисел в неупорядоченном массиве после заданного числа.
	fmt.Println("Задание  1. Подсчёт чётных и нечётных чисел в массиве.")

	rand.Seed(time.Now().UnixNano()) //генерируем массив случайных чисел
	var m1 [n]int
	for i := 0; i < n; i++ {
		m1[i] = rand.Intn(10 * n)
	}
	fmt.Println(m1)
	var t, tx int // искомое число в массиве
	fmt.Println("Введите число:")
	fmt.Scanln(&t)
	for i, v := range m1 {
		if v == t {
			tx = i
			break
		} else {
			tx = 0
		}
	}
	if tx == 0 && t != m1[0] {
		fmt.Printf("В массиве нет такого числа: %d. Результат: 0\n", t)
	} else {
		var mMinus []int = m1[tx+1:]
		num := len(mMinus)
		fmt.Printf("%d чисел после искомого числа: %d\n", num, t)
	}

	fmt.Println("--------------------------------")

	// Программа находит первое вхождение заданного числа в массив.
	fmt.Println("Задание  2. Нахождение первого вхождения числа в упорядоченном массиве (числа могут повторяться).")

	m2 := [...]int{1, 2, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10}
	x := 2
	fmt.Printf("Находим число %d в массиве:\n%d\n", x, m2)
	var sl []int
	for i, v := range m2 {
		if v == x {
			sl = append(sl, i)
		}
	}
	fmt.Printf("Индекс числа: %d\n", sl[0])

	fmt.Println("---------End------------")

}
