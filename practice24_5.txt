/*24.5 Практическая работа
Что входит в работу:
1. Написать функцию для сортировки массива вставками.
2. Написать функцию, принимающую на вход неограниченное число
	переменных типа int и сортирующую этот массив пузырьком в обратном порядке.*/

package main

import (
	"fmt"
	"math/rand"
	"time"
)

const size = 10

func insertionSorting(a []int) []int {
	var i, j int
	for j = 1; j < len(a); j++ {
		x := a[j]
		for i = j - 1; i >= 0 && a[i] > x; i-- {
			a[i+1] = a[i]
		}
		a[i+1] = x
	}
	return a
}

func main() {

	// Функция сортирует массив длины 10 вставками.
	fmt.Println("Задание  1. Сортировка вставками.")

	rand.Seed(time.Now().UnixNano()) //генерируем массив случайных чисел
	var array [size]int
	for i := 0; i < size; i++ {
		array[i] = rand.Intn(3 * size)
	}

	arr := array[:]

	fmt.Printf("Сгенерирован массив длиной 10: ")
	fmt.Println(arr)
	fmt.Printf("Массив отсортирован вставками: ")
	fmt.Println(insertionSorting(arr))

	fmt.Println("-----------------------------------------------")

	//  Анонимная функция получает на вход массив типа integer, сортирует его пузырьком
	// и переворачивает (либо сразу сортирует в обратном порядке, как посчитаете нужным).
	fmt.Println("Задание 2. Анонимные функции.")

	f := func(a []int) []int {
		for i := 0; i < len(a); i++ {
			for j := 1; j < len(a)-i; j++ {
				if a[j-1] < a[j] {
					a[j-1], a[j] = a[j], a[j-1]
				}
			}
		}
		return a
	}
	fmt.Printf("Массив отсортирован пузырьком в обратном порядке: \n")
	fmt.Println(f(arr))

	fmt.Println("-----------End--------------")
}
