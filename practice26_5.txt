/*26.5 Практическая работа
Что входит в работу:
1. Написать программу аналог cat.
Программа должна получать на вход имена двух файлов,
необходимо  конкатенировать их содержимое, используя strings.Join*/

package main

import (
	"bufio"
	"flag"
	"fmt"
	"io"
	"log"
	"os"
	"strings"
)

func main() {

	flag.Usage = func() {}
	flag.Parse()

	message1 := []byte("контент первого файла\n")
	if err := os.WriteFile("first.txt", message1, 0644); err != nil {
		log.Fatal(err)
	}
	message2 := []byte("контент второго файла\n")
	if err := os.WriteFile("second.txt", message2, 0644); err != nil {
		log.Fatal(err)
	}
	result, err := os.Create("result.txt")
	if err != nil {
		log.Fatal(err)
	}
	result.Close()

	var text []string
	var fl []string

	for _, fn := range flag.Args() {
		f, err := os.Open(fn)
		if err != nil {
			panic(err)
		}
		_, err = io.Copy(os.Stdout, f)
		if err != nil {
			panic(err)
		}
		f, _ = os.Open(fn)
		scan := bufio.NewScanner(f)
		for scan.Scan() {
			text = append(text, scan.Text())
		}
		fl = append(fl, flag.Args()...)
	}
	fstr := strings.Join(fl, "")
	if strings.Contains(fstr, "result.txt") {
		f2, err := os.OpenFile("result.txt", os.O_APPEND|os.O_CREATE|os.O_RDWR, 0644)
		if err != nil {
			log.Fatal(err)
		}
		defer f2.Close()

		if _, err := f2.WriteString(strings.Join(text, "\n")); err != nil {
			log.Fatal(err)
		}
	}
	fmt.Println("-----------End--------------")
}
